{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/sidebar.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction SidebarComponent_li_14_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 23)(1, \"a\", 24);\n    i0.ɵɵelement(2, \"i\");\n    i0.ɵɵelementStart(3, \"p\", 16);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const subMenuItem_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", subMenuItem_r3.url);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMapInterpolate1(\"\", subMenuItem_r3.icon, \" ml-1\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(subMenuItem_r3.titulo);\n  }\n}\nfunction SidebarComponent_li_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 17)(1, \"a\", 18);\n    i0.ɵɵelement(2, \"i\");\n    i0.ɵɵelementStart(3, \"p\", 16);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementStart(5, \"span\", 19);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"i\", 20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"ul\", 21);\n    i0.ɵɵtemplate(9, SidebarComponent_li_14_li_9_Template, 5, 5, \"li\", 22);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(item_r1.icono);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.titulo, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.submenu.length);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", item_r1.submenu);\n  }\n}\nexport class SidebarComponent {\n  constructor(sidebarService) {\n    this.sidebarService = sidebarService;\n    this.menuItems = this.sidebarService.menu;\n    this.initTreeview();\n  }\n  ngOnInit() {\n    // Inicializa Treeview después de que Angular haya renderizado el componente.\n    // Utiliza setTimeout para asegurarte de que esto ocurra después del ciclo de detección de cambios.\n    setTimeout(() => {\n      this.initTreeview();\n    });\n  }\n  ngAfterViewInit() {\n    // En caso de que haya otras inicializaciones necesarias después de la vista.\n    // Puedes mover la llamada a initTreeview() aquí si es necesario.\n    this.initTreeview();\n  }\n  logout() {\n    location.href = 'login';\n  }\n  initTreeview() {\n    // Llamada a Treeview para inicializar el menú desplegable.\n    $('[data-widget=\"treeview\"]').Treeview();\n  }\n  static #_ = this.ɵfac = function SidebarComponent_Factory(t) {\n    return new (t || SidebarComponent)(i0.ɵɵdirectiveInject(i1.SidebarService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SidebarComponent,\n    selectors: [[\"app-sidebar\"]],\n    decls: 20,\n    vars: 1,\n    consts: [[1, \"main-sidebar\", \"sidebar-dark-primary\", \"elevation-4\"], [\"href\", \"../../index3.html\", 1, \"brand-link\"], [\"src\", \"./assets/dist/img/AdminLTELogo.png\", \"alt\", \"AdminLTE Logo\", 1, \"brand-image\", \"img-circle\", \"elevation-3\", 2, \"opacity\", \".8\"], [1, \"brand-text\", \"font-weight-light\"], [1, \"sidebar\"], [1, \"user-panel\", \"mt-3\", \"pb-3\", \"mb-3\", \"d-flex\"], [1, \"image\"], [\"src\", \"./assets/dist/img/user2-160x160.jpg\", \"alt\", \"User Image\", 1, \"img-circle\", \"elevation-2\"], [1, \"info\"], [\"href\", \"#\", 1, \"d-block\"], [1, \"mt-2\"], [\"data-widget\", \"treeview\", \"role\", \"menu\", \"data-accordion\", \"false\", 1, \"nav\", \"nav-pills\", \"nav-sidebar\", \"flex-column\"], [\"class\", \"nav-item has-treeview\", 4, \"ngFor\", \"ngForOf\"], [1, \"nav-item\", 2, \"cursor\", \"pointer\"], [1, \"nav-link\", 3, \"click\"], [1, \"fas\", \"fa-sign-out-alt\", \"ml-2\"], [1, \"ml-2\"], [1, \"nav-item\", \"has-treeview\"], [\"href\", \"#\", 1, \"nav-link\"], [1, \"badge\", \"badge-primary\", \"ml-2\"], [1, \"right\", \"fas\", \"fa-angle-left\"], [1, \"nav\", \"nav-treeview\"], [\"class\", \"nav-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"nav-item\"], [1, \"nav-link\", 2, \"cursor\", \"pointer\", 3, \"routerLink\"]],\n    template: function SidebarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"aside\", 0)(1, \"a\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementStart(3, \"span\", 3);\n        i0.ɵɵtext(4, \"AdminLTE 3\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6);\n        i0.ɵɵelement(8, \"img\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 8)(10, \"a\", 9);\n        i0.ɵɵtext(11, \"Alexander Pierce\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"nav\", 10)(13, \"ul\", 11);\n        i0.ɵɵtemplate(14, SidebarComponent_li_14_Template, 10, 6, \"li\", 12);\n        i0.ɵɵelementStart(15, \"li\", 13)(16, \"a\", 14);\n        i0.ɵɵlistener(\"click\", function SidebarComponent_Template_a_click_16_listener() {\n          return ctx.logout();\n        });\n        i0.ɵɵelement(17, \"i\", 15);\n        i0.ɵɵelementStart(18, \"p\", 16);\n        i0.ɵɵtext(19, \" Logout \");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.menuItems);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.RouterLink],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","subMenuItem_r3","url","ɵɵclassMapInterpolate1","icon","ɵɵtextInterpolate","titulo","ɵɵtemplate","SidebarComponent_li_14_li_9_Template","ɵɵclassMap","item_r1","icono","ɵɵtextInterpolate1","submenu","length","SidebarComponent","constructor","sidebarService","menuItems","menu","initTreeview","ngOnInit","setTimeout","ngAfterViewInit","logout","location","href","$","Treeview","_","ɵɵdirectiveInject","i1","SidebarService","_2","selectors","decls","vars","consts","template","SidebarComponent_Template","rf","ctx","SidebarComponent_li_14_Template","ɵɵlistener","SidebarComponent_Template_a_click_16_listener"],"sources":["E:\\GitHub\\Angular Projects\\adminlte-template-app\\src\\app\\shared\\sidebar\\sidebar.component.ts","E:\\GitHub\\Angular Projects\\adminlte-template-app\\src\\app\\shared\\sidebar\\sidebar.component.html"],"sourcesContent":["// sidebar.component.ts\n\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { SidebarService } from 'src/app/services/sidebar.service';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css'],\n})\nexport class SidebarComponent implements OnInit, AfterViewInit {\n  menuItems: any[];\n\n  constructor(private sidebarService: SidebarService) {\n    this.menuItems = this.sidebarService.menu;\n    this.initTreeview();\n  }\n\n  ngOnInit() {\n    // Inicializa Treeview después de que Angular haya renderizado el componente.\n    // Utiliza setTimeout para asegurarte de que esto ocurra después del ciclo de detección de cambios.\n    setTimeout(() => {\n      this.initTreeview();\n    });\n  }\n\n  ngAfterViewInit() {\n    // En caso de que haya otras inicializaciones necesarias después de la vista.\n    // Puedes mover la llamada a initTreeview() aquí si es necesario.\n    this.initTreeview();\n  }\n\n  logout() {\n    location.href = 'login';\n  }\n\n  private initTreeview() {\n    // Llamada a Treeview para inicializar el menú desplegable.\n    $('[data-widget=\"treeview\"]').Treeview();\n  }\n}\n","<!-- Main Sidebar Container -->\n<aside class=\"main-sidebar sidebar-dark-primary elevation-4\">\n    <!-- Brand Logo -->\n    <a href=\"../../index3.html\" class=\"brand-link\">\n        <img src=\"./assets/dist/img/AdminLTELogo.png\" alt=\"AdminLTE Logo\" class=\"brand-image img-circle elevation-3\"\n            style=\"opacity: .8\">\n        <span class=\"brand-text font-weight-light\">AdminLTE 3</span>\n    </a>\n\n    <!-- Sidebar -->\n    <div class=\"sidebar\">\n        <!-- Sidebar user (optional) -->\n        <div class=\"user-panel mt-3 pb-3 mb-3 d-flex\">\n            <div class=\"image\">\n                <img src=\"./assets/dist/img/user2-160x160.jpg\" class=\"img-circle elevation-2\" alt=\"User Image\">\n            </div>\n            <div class=\"info\">\n                <a href=\"#\" class=\"d-block\">Alexander Pierce</a>\n            </div>\n        </div>\n\n        <!-- Sidebar Menu -->\n        <nav class=\"mt-2\">\n            <ul class=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\n                <!-- Add icons to the links using the .nav-icon class with font-awesome or any other icon font library -->\n                <li class=\"nav-item has-treeview\" *ngFor=\"let item of menuItems\">\n                    <a href=\"#\" class=\"nav-link \">\n                        <i class=\"{{item.icono}}\"></i>\n                        <p class=\"ml-2\">\n                            {{item.titulo}}\n                            <span class=\"badge badge-primary ml-2\">{{item.submenu.length}}</span>\n                            <i class=\"right fas fa-angle-left\"></i>\n                        </p>\n                    </a>\n                    <ul class=\"nav nav-treeview\">\n                        <li class=\"nav-item\" *ngFor=\"let subMenuItem of item.submenu\">\n                            <a [routerLink]=\"subMenuItem.url\" class=\"nav-link\" style=\"cursor: pointer;\">\n                                <i class=\"{{subMenuItem.icon}} ml-1\"></i>\n                                <p class=\"ml-2\">{{subMenuItem.titulo}}</p>\n                            </a>\n                        </li>\n                    </ul>\n                </li>\n                <li class=\"nav-item\" style=\"cursor: pointer;\">\n                    <a (click)=\"logout()\" class=\"nav-link \">\n                        <i class=\"fas fa-sign-out-alt ml-2\"></i>\n                        <p class=\"ml-2\">\n                            Logout\n                        </p>\n                    </a>\n                </li>\n            </ul>\n        </nav>\n        <!-- /.sidebar-menu -->\n    </div>\n    <!-- /.sidebar -->\n</aside>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}